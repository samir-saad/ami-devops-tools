apiVersion: v1
kind: Template
labels:
  app: spring-config-server
  template: spring-config-server
metadata:
  name: spring-config-server
  annotations:
    openshift.io/display-name: "Spring Config Server"
    description: "Spring Config Server"
    tags: "ci/cd" 
    iconClass: "icon-spring"
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: spring-config-server
  type: Opaque
  stringData:
    GIT_USERNAME: ${GIT_USERNAME}
    GIT_PASSWORD: ${GIT_PASSWORD}

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: spring-config-server
  data:
    application.properties: |-
      ## =========================================================
      ##              Service
      ## =========================================================
      application.domain=${APP_DOMAIN}
      application.lob=${APP_LOB}
      spring.application.name=spring-config-server
      
      
      ## =========================================================
      ##              Server
      ## =========================================================
      server.address=0.0.0.0
      server.port=8080
      server.servlet.application-display-name=${spring.application.name}
      server.servlet.path=/
      server.servlet.context-path=/
      
      ## Tomcat-specific server settings.
      server.tomcat.accept-count=20
      server.tomcat.max-connections=20
      server.tomcat.max-threads=10
      
      
      ## =========================================================
      ##              Management / Actuator
      ## =========================================================
      management.server.address=0.0.0.0
      management.server.port=8081
      management.endpoints.web.base-path=/actuator
      management.endpoints.web.exposure.include=info,health,metrics,prometheus
      
      
      ## =========================================================
      ##              Config Repo
      ## =========================================================
      spring.cloud.config.server.git.uri=${GIT_URI}
      spring.cloud.config.server.git.skipSslValidation=${GIT_SKIP_SSL_VALIDATION}
      spring.cloud.config.server.git.username=${GIT_USERNAME}
      spring.cloud.config.server.git.password=${GIT_PASSWORD}
      spring.cloud.config.server.git.searchPaths=*
      
      ## Disable config health check
      health.config.enabled=false
    
- apiVersion: v1
  kind: Route
  metadata:
    name: spring-config-server
    annotations:
      haproxy.router.openshift.io/disable_cookies: 'true'
  spec:
    port:
      targetPort: http
    to:
      kind: Service
      name: spring-config-server

- apiVersion: v1
  kind: Route
  metadata:
    name: spring-config-server-mgmt
    annotations:
      haproxy.router.openshift.io/disable_cookies: 'true'
  spec:
    port:
      targetPort: mgmt
    to:
      kind: Service
      name: spring-config-server
    path: /actuator
    
- apiVersion: v1
  kind: Service
  metadata:
    name: spring-config-server
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: mgmt
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      name: spring-config-server
    sessionAffinity: None
    type: ClusterIP
    
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: spring-config-server
  spec:
    replicas: ${{REPLICAS}}
    selector:
      name: spring-config-server
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: spring-config-server
      spec:
        containers:
        - env:
           - name: JAVA_OPTIONS
             value: "${JAVA_OPTIONS}"
           - name: GIT_USERNAME
             valueFrom:
                secretKeyRef:
                  name: spring-config-server
                  key: GIT_USERNAME                  
           - name: GIT_PASSWORD
             valueFrom:
                secretKeyRef:
                  name: spring-config-server
                  key: GIT_PASSWORD           
          capabilities: {}
          name: spring-config-server
          image: ${IMAGE_NAME}:${IMAGE_TAG}
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
            name: "http"
            protocol: "TCP"
          - containerPort: 8081
            name: "mgmt"
            protocol: "TCP"
          livenessProbe:
            httpGet:
              path: "/actuator/health"
              port: 8081
            initialDelaySeconds: 180
          readinessProbe:
            httpGet:
              path: "/actuator/health"
              port: 8081
            initialDelaySeconds: 10
          resources:
            requests:
              cpu: ${{CPU_REQUEST}}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${{CPU_LIMIT}}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
          - mountPath: /deployments/config
            name: ami-service-config
          
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: ami-service-config
          configMap:
            name: spring-config-server

    triggers:
      - type: "ConfigChange"

parameters:
- name: IMAGE_NAME
  displayName: Container Image name
  value: "docker.io/samirsaad/spring-config-server"
- name: IMAGE_TAG
  displayName: Image tag
  value: "1.0.0-SNAPSHOT"
- name: REPLICAS
  displayName: Replicas  
  value: "1"
- name: MEMORY_REQUEST
  displayName: Memory Request
  description: Minimum amount of memory to reserve for the container.
  value: 300Mi
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Maximum amount of memory the container can use.
  value: 1Gi
- name: CPU_REQUEST
  displayName: CPU Request
  description: Minimum amount of CPU to reserve for the container.
  value: 100m
- name: CPU_LIMIT
  displayName: CPU Limit
  description: Maximum amount of CPU the container can use.
  value: "1"
- name: JAVA_OPTIONS
  displayName: JVM Options
  value: "-XshowSettings:vm -Xms256m -Xmx900m"

## Config Server specific parameters
- name: GIT_URI
  displayName: Configs repo url
  required: true
- name: GIT_SKIP_SSL_VALIDATION
  displayName: Configs repo skip ssl validation
  value: "true"
- name: GIT_USERNAME
  displayName: Configs repo username
  value: "" 
- name: GIT_PASSWORD
  displayName: Configs repo password
  value: "" 
- name: APP_DOMAIN
  displayName: Application domain (for monitoring)
  value: ""
- name: APP_LOB
  displayName: Application line of business (for monitoring)
  value: ""